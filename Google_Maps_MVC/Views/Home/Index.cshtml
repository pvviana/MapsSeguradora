<!DOCTYPE html>
<html>
<head>
    <!--<meta name="viewport" content="initial-scale=1.0, user-scalable=no">-->
    <!--Let browser know website is optimized for mobile-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="utf-8">
    <title>Marker Clustering</title>
    <!--Import Google Icon Font-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <style>
         /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
         #map {
             height: 100%;
         }
         /* Optional: Makes the sample page fill the window. */
         html, body {
             height: 100%;
             margin: 0;
             padding: 0;
         }
        .controls {
            margin-top: 10px;
            border: 1px solid transparent;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            height: 32px;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #pac-input {
            background-color: #fff;
            border: 1px solid;
            box-shadow: 1px 1px 1px 1px;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 300px;
            top: 1rem !important;
            left: 3.5rem !important;
        }

            #pac-input:focus {
                border-color: #4d90fe;
            }

        .pac-container {
            font-family: Roboto;
        }

        #type-selector {
            color: #fff;
            background-color: #4d90fe;
            padding: 5px 11px 0px 11px;
        }

            #type-selector label {
                font-family: Roboto;
                font-size: 13px;
                font-weight: 300;
            }

        #target {
            width: 345px;
        }
        .gmnoprint{
            display:none;
        }
        #container {
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        #maps {
            width: 100%;
            height: 100%;
            float: left;
        }
        #menu {
            /*width: 28px;
            height: 100%;*/
            /*background-color: maroon;*/
            min-height: 50%;
            overflow: hidden;
            z-index: 100;
            position: absolute;
            margin-top: 1.25rem;
            margin-left: 0.9rem;
        }
        #divnav {
            overflow: hidden;
            z-index: 100;
            position: absolute;
            margin-top: 1.25rem;
            margin-left: 0.9rem;
            width: 100%;
        }

        #sidenav-overlay {
            z-index: 0 !important;
        }
        nav {
            background-color: transparent !important;
            margin-left: 27rem;
            color: dodgerblue !important;
            -webkit-box-shadow: none !important;
            box-shadow: none !important;
            line-height: 45px !important;
        }
        .breadcrumb{
            color:dodgerblue !important;
        }
            .breadcrumb:before {
                color: dodgerblue !important;
            }
    </style>
    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">


</head>
<body>
    <div id="container">
        <div id="menu">
            <ul id="slide-out" class="side-nav">
                <li>
                    <div class="user-view">
                        <div class="background">
                            <img src="images/office.jpg">
                        </div>
                        <a href="#!user"><img class="circle" src="images/yuna.jpg"></a>
                        <a href="#!name"><span class="white-text name">John Doe</span></a>
                        <a href="#!email"><span class="white-text email">jdandturk@gmail.com</span></a>
                    </div>
                </li>
                <li><a href="#!"><i class="material-icons">cloud</i>First Link With Icon</a></li>
                <li><a class='dropdown-button btn' href='#' data-activates='dropdown1'>Drop Me!</a></li>
                <li><a href="#!">Second Link</a></li>
                <li><div class="divider"></div></li>
                <li><a class="subheader">Subheader</a></li>
                <li><a class="waves-effect" href="#!">Third Link With Waves</a></li>
            </ul>
            <!-- Dropdown Structure -->
            <ul id='dropdown1' class='dropdown-content'>
                <li><a href="#!">one</a></li>
                <li><a href="#!">two</a></li>
                <li class="divider"></li>
                <li><a href="#!">three</a></li>
                <li><a href="#!"><i class="material-icons">view_module</i>four</a></li>
                <li><a href="#!"><i class="material-icons">cloud</i>five</a></li>
            </ul>
            <a href="#" style="" data-activates="slide-out" class="btn-floating waves-effect waves-light blue"><i class="material-icons">menu</i></a>
        </div>
        <div id="divnav">
            <nav>
                <div class="nav-wrapper">
                    <div class="col s12">
                        <a href="#!" class="breadcrumb">First</a>
                        <a href="#!" class="breadcrumb">Second</a>
                        <a href="#!" class="breadcrumb">Third</a>
                    </div>
                </div>
            </nav>
        </div>
        <div id="maps">
            <input id="pac-input" class="controls" type="text" placeholder="Search Box">
            <div id="map"></div>
        </div>
    </div>
        <script>

        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 3,
                center: { lat: -28.024, lng: 140.887 },
                mapTypeId: 'roadmap'
            });

            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);


            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function () {
                searchBox.setBounds(map.getBounds());
            });

            searchBox.addListener('places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                // Clear out the old markers.
                markers.forEach(function (marker) {
                    marker.setMap(null);
                });

                markers = [];

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function (place) {
                    if (!place.geometry) {
                        console.log("Returned place contains no geometry");
                        return;
                    }
                    var icon = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    // Create a marker for each place.
                    markers.push(new google.maps.Marker({
                        map: map,
                        icon: icon,
                        title: place.name,
                        position: place.geometry.location
                    }));

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });


            // Create an array of alphabetical characters used to label the markers.
            var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

            // Add some markers to the map.
            // Note: The code uses the JavaScript Array.prototype.map() method to
            // create an array of markers based on a given "locations" array.
            // The map() method here has nothing to do with the Google Maps API.
            var markers = locations.map(function (location, i) {
                return new google.maps.Marker({
                    position: location,
                    label: labels[i % labels.length]
                });
            });

            // Add a marker clusterer to manage the markers.
            var markerCluster = new MarkerClusterer(map, markers,
                { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });
        }

       // var markers = @Html.Raw(ViewBag.Markers);

             locations = [];//markers;

               /* [
                    { lat: -31.563910, lng: 147.154312 },
                    { lat: -33.718234, lng: 150.363181 },
                    { lat: -33.727111, lng: 150.371124 },
                    { lat: -33.848588, lng: 151.209834 },
                    { lat: -33.851702, lng: 151.216968 },
                    { lat: -34.671264, lng: 150.863657 },
                    { lat: -35.304724, lng: 148.662905 },
                    { lat: -36.817685, lng: 175.699196 },
                    { lat: -36.828611, lng: 175.790222 },
                    { lat: -37.750000, lng: 145.116667 },
                    { lat: -37.759859, lng: 145.128708 },
                    { lat: -37.765015, lng: 145.133858 },
                    { lat: -37.770104, lng: 145.143299 },
                    { lat: -37.773700, lng: 145.145187 },
                    { lat: -37.774785, lng: 145.137978 },
                    { lat: -37.819616, lng: 144.968119 },
                    { lat: -38.330766, lng: 144.695692 },
                    { lat: -39.927193, lng: 175.053218 },
                    { lat: -41.330162, lng: 174.865694 },
                    { lat: -42.734358, lng: 147.439506 },
                    { lat: -42.734358, lng: 147.501315 },
                    { lat: -42.735258, lng: 147.438000 },
                    { lat: -43.999792, lng: 170.463352 }
                ];*/

        </script>
        <!-- Compiled and minified JavaScript -->
        <script type="text/javascript" src="https://code.jquery.com/jquery-3.2.1.min.js"></script>

        <script type="text/javascript">
            $.ajax({
                type: 'GET',
                dataType: 'json',
                async: false,
                url: '/Mock/codebeautify.json',
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {
                        for (var key in data[i]) {
                            if (!isNaN(data[i]['vr_lng'])) {
                                data[i]['vr_lng'] = parseFloat(data[i]['vr_lng']);
                            }
                            if (!isNaN(data[i]['vr_lat'])) {
                                data[i]['vr_lat'] = parseFloat(data[i]['vr_lat']);
                            }
                            if (!isNaN(data[i]['vr_latfim'])) {
                                data[i]['vr_latfim'] = parseFloat(data[i]['vr_latfim']);
                            }
                            if (!isNaN(data[i]['vr_lngfim'])) {
                                data[i]['vr_lngfim'] = parseFloat(data[i]['vr_lngfim']);
                            }
                        }
                    }


                    data = data.filter(function (props) {
                        delete props.cd_clb;
                        delete props.cd_copfch;
                        delete props.cd_cra;
                        delete props.cd_emp;
                        delete props.cd_eva;
                        delete props.cd_orivnd;
                        delete props.cd_qst;
                        delete props.cd_usuicl;
                        delete props.dt_eva;
                        delete props.dt_icl;
                        delete props.fl_exclog;
                        delete props.fl_parsrt;
                        delete props.st_eva;
                        delete props.vr_latfim;
                        delete props.vr_lngfim;
                        props.lat = props.vr_lat;
                        props.lng = props.vr_lng;
                        delete props.vr_lat;
                        delete props.vr_lng;
                        return true;
                    });

                    locations = data;

                }
            });
    // rest of your code
        </script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
        <script type="text/javascript">
            $(".btn-floating").sideNav();

        </script>
        <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAeogzlvt0LsiM7ZlCYQCME-_xsN_RpzVU&callback=initMap">
        </script>
</body>
</html>